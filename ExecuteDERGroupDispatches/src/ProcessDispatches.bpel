<?xml version="1.0" encoding="UTF-8" ?>
<process
    name="ProcessDispatches"
    targetNamespace="http://enterprise.netbeans.org/bpel/ExecuteDERGroupDispatches/ProcessDispatches"
    xmlns:tns="http://enterprise.netbeans.org/bpel/ExecuteDERGroupDispatches/ProcessDispatches"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:util="java://com.sixthc.bpel.spring.Utility"
    xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
    xmlns:sxt="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Trace" 
    xmlns:sxed="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Editor2"
    xmlns:sxat="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Attachment"
    xmlns:sxeh="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/ErrorHandling" xmlns:ns0="http://www.epri.com/DERGroupDispatchesMessage" xmlns:ns1="http://www.iec.ch/TC57/2011/schema/message" xmlns:sxnmp="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/NMProperty" xmlns:ns2="http://docs.oasis-open.org/wsbpel/2.0/process/executable"> 
    <import namespace="http://www.epri.com/ExecuteDERGroupDispatches" location="file:/usr/local/git/nrel/61968/wsdl/ExecuteDERGroupDispatches.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="http://enterprise.netbeans.org/bpel/ExecuteDERGroupDispatchesIn" location="ExecuteDERGroupDispatchesIn.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="http://enterprise.netbeans.org/bpel/ExecuteDERGroupDispatchesOut" location="ExecuteDERGroupDispatchesOut.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="http://enterprise.netbeans.org/bpel/ExecuteDERGroupDispatchesLog" location="ExecuteDERGroupDispatchesLog.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <partnerLinks>
        <partnerLink name="ServiceOutPartnlerLink" xmlns:tns="http://enterprise.netbeans.org/bpel/ExecuteDERGroupDispatchesOut" partnerLinkType="tns:DERGroupDispatches_PortLinkType" partnerRole="DERGroupDispatches_PortRole"/>
        <partnerLink name="LoggerOutPartnerLink" xmlns:tns="http://enterprise.netbeans.org/bpel/ExecuteDERGroupDispatchesLog" partnerLinkType="tns:DERGroupDispatches_PortLinkType" partnerRole="DERGroupDispatches_PortRole"/>
        <partnerLink name="ServiceInPartnerLink" xmlns:tns="http://enterprise.netbeans.org/bpel/ExecuteDERGroupDispatchesIn" partnerLinkType="tns:DERGroupDispatches_PortLinkType" myRole="DERGroupDispatches_PortRole"/>
    </partnerLinks>
    <variables>
        <variable name="InvokeESBFault" xmlns:tns="http://www.epri.com/ExecuteDERGroupDispatches" messageType="tns:ResponseMessage"/>
        <variable name="ServiceOut" xmlns:tns="http://www.epri.com/ExecuteDERGroupDispatches" messageType="tns:ResponseMessage"/>
        <variable name="RemoteURL" type="xs:string"/>
    </variables>
    <faultHandlers>
        <catch faultName="ns2:invalidVariables" faultVariable="ESBFault" faultMessageType="sxeh:faultMessage">
            <sequence name="Sequence7">
                <assign name="Assign8">
                    <copy>
                        <from>'6000'</from>
                        <to>$InvokeESBFault.ResponseMessage/ns0:Reply/ns1:Error/ns1:code</to>
                    </copy>
                    <copy>
                        <from>'FATAL'</from>
                        <to>$InvokeESBFault.ResponseMessage/ns0:Reply/ns1:Error/ns1:level</to>
                    </copy>
                    <copy>
                        <from>'Invoke ESB (outer most exception handler invoked)'</from>
                        <to>$InvokeESBFault.ResponseMessage/ns0:Reply/ns1:Error/ns1:reason</to>
                    </copy>
                    <copy>
                        <from variable="ESBFault" part="fault"/>
                        <to>$InvokeESBFault.ResponseMessage/ns0:Reply/ns1:Error/ns1:details</to>
                    </copy>
                </assign>
                <reply name="Reply2" partnerLink="ServiceInPartnerLink" operation="CreateDERGroupDispatches" xmlns:tns="http://www.epri.com/ExecuteDERGroupDispatches" portType="tns:DERGroupDispatches_Port" variable="InvokeESBFault"/>
                <exit name="Exit5"/>
            </sequence>
        </catch>
    </faultHandlers>
    <sequence name="Sequence1">
        <scope name="Scope1" xmlns:tns="http://www.epri.com/ExecuteDERGroupDispatches">
            <variables>
                <variable name="ServiceIn" messageType="tns:CreateDERGroupDispatchesRequestMessage"/>
            </variables>
            <sequence>
                <receive name="ServiceIn" createInstance="yes" partnerLink="ServiceInPartnerLink" operation="CreateDERGroupDispatches" xmlns:tns="http://www.epri.com/ExecuteDERGroupDispatches" portType="tns:DERGroupDispatches_Port" variable="ServiceIn">
                </receive>
                <scope name="Scope2">
                    <sxt:trace>
                        <sxt:log level="info" location="onStart">
                            <from>util:log($ServiceIn.CreateDERGroupDispatchesRequestMessage/ns0:Header/ns1:MessageID, concat('Message received, headers :', sxnmp:getVariableNMProperty('ServiceIn', 'org.glassfish.openesb.inbound.http.headers')))</from>
                        </sxt:log>
                    </sxt:trace>
                    <variables>
                        <variable name="GetVendorFaultOut" messageType="tns:ResponseMessage"/>
                    </variables>
                    <faultHandlers>
                        <catch faultName="sxeh:com.sixthc.bpel.spring.service.VendorLookupException" faultVariable="GetVendorFaultVar" faultMessageType="sxeh:faultMessage">
                            <sequence name="Sequence2">
                                <assign name="Assign3">
                                    <sxt:trace>
                                        <sxt:log level="info" location="onStart">
                                            <from>util:log($ServiceIn.CreateDERGroupDispatchesRequestMessage/ns0:Header/ns1:MessageID, concat('Get Vendor URL failed, fault :', $GetVendorFaultVar.fault))</from>
                                        </sxt:log>
                                    </sxt:trace>
                                    <copy>
                                        <from>'6002'</from>
                                        <to>$GetVendorFaultOut.ResponseMessage/ns0:Reply/ns1:Error/ns1:code</to>
                                    </copy>
                                    <copy>
                                        <from>'FATAL'</from>
                                        <to>$GetVendorFaultOut.ResponseMessage/ns0:Reply/ns1:Error/ns1:level</to>
                                    </copy>
                                    <copy>
                                        <from>'Get Destination URL Lookup Failed'</from>
                                        <to>$GetVendorFaultOut.ResponseMessage/ns0:Reply/ns1:Error/ns1:reason</to>
                                    </copy>
                                    <copy>
                                        <from>concat('Operation : CIM_DER (createDERGroupDispatch)', ', User :', $ServiceIn.CreateDERGroupDispatchesRequestMessage/ns0:Header/ns1:User/ns1:UserID, ', Org :', $ServiceIn.CreateDERGroupDispatchesRequestMessage/ns0:Header/ns1:User/ns1:Organization)</from>
                                        <to>$GetVendorFaultOut.ResponseMessage/ns0:Reply/ns1:Error/ns1:details</to>
                                    </copy>
                                </assign>
                                <reply name="GetVendorFaultReply" partnerLink="ServiceInPartnerLink" operation="CreateDERGroupDispatches" portType="tns:DERGroupDispatches_Port" variable="GetVendorFaultOut"/>
                                <exit name="Exit3"/>
                            </sequence>
                        </catch>
                    </faultHandlers>
                    <sequence name="Sequence3">
                        <assign name="Assign1">
                            <sxt:trace>
                                <sxt:log level="info" location="onStart">
                                    <from>util:log($ServiceIn.CreateDERGroupDispatchesRequestMessage/ns0:Header/ns1:MessageID, concat('Get Vendor URL - User :', $ServiceIn.CreateDERGroupDispatchesRequestMessage/ns0:Header/ns1:User/ns1:UserID, ', Org :', $ServiceIn.CreateDERGroupDispatchesRequestMessage/ns0:Header/ns1:User/ns1:Organization))</from>
                                </sxt:log>
                                <sxt:log level="info" location="onComplete">
                                    <from>util:log($ServiceIn.CreateDERGroupDispatchesRequestMessage/ns0:Header/ns1:MessageID, concat('Get Vendor URL Complete - URL : ', $RemoteURL))</from>
                                </sxt:log>
                            </sxt:trace>
                            <copy>
                                <from>util:getURLByVendor($ServiceIn.CreateDERGroupDispatchesRequestMessage/ns0:Header/ns1:User/ns1:Organization, $ServiceIn.CreateDERGroupDispatchesRequestMessage/ns0:Header/ns1:User/ns1:UserID, 'CIM_DER (createDERGroupDispatch)')</from>
                                <to variable="RemoteURL"/>
                            </copy>
                        </assign>
                    </sequence>
                </scope>
                <scope name="Scope3">
                    <variables>
                        <variable name="RemoteFault" messageType="tns:ResponseMessage"/>
                        <variable name="RemoteServiceOut" messageType="tns:ResponseMessage"/>
                        <variable name="RemoteServiceIn" messageType="tns:CreateDERGroupDispatchesRequestMessage"/>
                    </variables>
                    <faultHandlers>
                        <catch faultName="sxeh:systemFault" faultVariable="InvokeRemoteFault" faultMessageType="sxeh:faultMessage">
                            <sequence name="Sequence5">
                                <assign name="Assign5">
                                    <sxt:trace>
                                        <sxt:log level="severe" location="onStart">
                                            <from>util:log($ServiceIn.CreateDERGroupDispatchesRequestMessage/ns0:Header/ns1:MessageID, concat('Exec remote failed, fault :', $InvokeRemoteFault.fault, ', Remote URL :', $RemoteURL))</from>
                                        </sxt:log>
                                    </sxt:trace>
                                    <copy>
                                        <from>'6003'</from>
                                        <to>$RemoteFault.ResponseMessage/ns0:Reply/ns1:Error/ns1:code</to>
                                    </copy>
                                    <copy>
                                        <from>'FATAL'</from>
                                        <to>$RemoteFault.ResponseMessage/ns0:Reply/ns1:Error/ns1:level</to>
                                    </copy>
                                    <copy>
                                        <from>'Unable to invoke remote server'</from>
                                        <to>$RemoteFault.ResponseMessage/ns0:Reply/ns1:Error/ns1:reason</to>
                                    </copy>
                                    <copy>
                                        <from variable="InvokeRemoteFault" part="fault"/>
                                        <to>$RemoteFault.ResponseMessage/ns0:Reply/ns1:Error/ns1:details</to>
                                    </copy>
                                </assign>
                                <reply name="RemoteFail" partnerLink="ServiceInPartnerLink" operation="CreateDERGroupDispatches" portType="tns:DERGroupDispatches_Port" variable="RemoteFault"/>
                                <exit name="Exit4"/>
                            </sequence>
                        </catch>
                    </faultHandlers>
                    <sequence name="Sequence4">
                        <assign name="Assign2">

                            <copy>
                                <from>$ServiceIn.CreateDERGroupDispatchesRequestMessage/ns0:Header</from>
                                <to>$RemoteServiceIn.CreateDERGroupDispatchesRequestMessage/ns0:Header</to>
                            </copy>
                            <copy ignoreMissingFromData="yes">
                                <from>$ServiceIn.CreateDERGroupDispatchesRequestMessage/ns0:Request</from>
                                <to>$RemoteServiceIn.CreateDERGroupDispatchesRequestMessage/ns0:Request</to>
                            </copy>
                            <copy>
                                <from>$ServiceIn.CreateDERGroupDispatchesRequestMessage/ns0:Payload</from>
                                <to>$RemoteServiceIn.CreateDERGroupDispatchesRequestMessage/ns0:Payload</to>
                            </copy>
                            <copy>
                                <from variable="RemoteURL"/>
                                <to variable="RemoteServiceIn" sxnmp:nmProperty="org.glassfish.openesb.outbound.address.url"/>
                            </copy>
                        </assign>
                        <invoke name="Invoke1" partnerLink="ServiceOutPartnlerLink" operation="CreateDERGroupDispatches" portType="tns:DERGroupDispatches_Port" inputVariable="RemoteServiceIn" outputVariable="RemoteServiceOut">
                            <sxt:trace>
                                <sxt:log level="info" location="onStart">
                                    <from>util:log($ServiceIn.CreateDERGroupDispatchesRequestMessage/ns0:Header/ns1:MessageID, concat('Invoke Remote Server - URL :', $RemoteURL, ', HTTP Headers :', sxnmp:getVariableNMProperty('ServiceIn', 'org.glassfish.openesb.inbound.http.headers')))</from>
                                </sxt:log>
                                <sxt:log level="info" location="onComplete">
                                    <from>util:log($ServiceIn.CreateDERGroupDispatchesRequestMessage/ns0:Header/ns1:MessageID, 'Invoke Remote Server Complete')</from>
                                </sxt:log>
                            </sxt:trace>                              
                        </invoke>
                        <assign name="Assign6">
                            <copy>
                                <from>$RemoteServiceOut.ResponseMessage/ns0:Header</from>
                                <to>$ServiceOut.ResponseMessage/ns0:Header</to>
                            </copy>
                            <copy>
                                <from>$RemoteServiceOut.ResponseMessage/ns0:Reply</from>
                                <to>$ServiceOut.ResponseMessage/ns0:Reply</to>
                            </copy>
                            <copy>
                                <from>$RemoteServiceOut.ResponseMessage/ns0:Payload</from>
                                <to>$ServiceOut.ResponseMessage/ns0:Payload</to>
                            </copy>
                        </assign>
                        <reply name="Reply1" partnerLink="ServiceInPartnerLink" operation="CreateDERGroupDispatches" portType="tns:DERGroupDispatches_Port" variable="ServiceOut"/>
                    </sequence>
                </scope>
                <scope name="Scope4">
                    <variables>
                        <variable name="LoggerOut" messageType="tns:ResponseMessage"/>
                        <variable name="LoggerIn" messageType="tns:CreateDERGroupDispatchesRequestMessage"/>
                    </variables>
                    <faultHandlers>
                        <catch faultVariable="InvokeLogFault" faultName="sxeh:systemFault" faultMessageType="sxeh:faultMessage">
                            <exit name="Exit2">
                                <sxt:trace>
                                    <sxt:log level="info" location="onStart">
                                        <from>util:log($ServiceIn.CreateDERGroupDispatchesRequestMessage/ns0:Header/ns1:MessageID, concat('Call to Log server failed. check esb var ${dispatches_log_server} fault : ', $InvokeLogFault.fault))</from>
                                    </sxt:log>
                                </sxt:trace>
                            </exit>
                        </catch>
                    </faultHandlers>
                    <sequence name="Sequence6">
                        <assign name="Assign7">
                            <copy>
                                <from>$ServiceIn.CreateDERGroupDispatchesRequestMessage/ns0:Header</from>
                                <to>$LoggerIn.CreateDERGroupDispatchesRequestMessage/ns0:Header</to>
                            </copy>
                            <copy ignoreMissingFromData="yes">
                                <from>$ServiceIn.CreateDERGroupDispatchesRequestMessage/ns0:Request</from>
                                <to>$LoggerIn.CreateDERGroupDispatchesRequestMessage/ns0:Request</to>
                            </copy>
                            <copy>
                                <from>$ServiceIn.CreateDERGroupDispatchesRequestMessage/ns0:Payload</from>
                                <to>$LoggerIn.CreateDERGroupDispatchesRequestMessage/ns0:Payload</to>
                            </copy>
                        </assign>
                        <invoke name="Invoke2" partnerLink="LoggerOutPartnerLink" operation="CreateDERGroupDispatches" portType="tns:DERGroupDispatches_Port" inputVariable="LoggerIn" outputVariable="LoggerOut">
                            <sxt:trace>
                                <sxt:log level="info" location="onStart">
                                    <from>util:log($ServiceIn.CreateDERGroupDispatchesRequestMessage/ns0:Header/ns1:MessageID, 'Calling Log server')</from>
                                </sxt:log>
                                <sxt:log level="info" location="onComplete">
                                    <from>util:log($ServiceIn.CreateDERGroupDispatchesRequestMessage/ns0:Header/ns1:MessageID, 'Call to Log server complete')</from>
                                </sxt:log>
                            </sxt:trace>
                        </invoke>
                        <exit name="Exit1"/>
                    </sequence>
                </scope>
            </sequence>
        </scope>
    </sequence>
</process>
